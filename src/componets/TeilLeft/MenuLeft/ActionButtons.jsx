import { useContext, useEffect, useState } from 'react';
import { MyContext } from '../../../context/TheContext';

/**
 * Renders a set of action buttons.
 *
 * @param {string} preId - the prefix for the button IDs
 * @param {string} role - the role attribute for the buttons container
 * @param {string} arialLabel - the aria-label attribute for the buttons container
 * @param {string} typeButton - the type attribute for the button elements
 * @param {Array} options - an array of options to be displayed as buttons
 * @param {Array} colors - an array of colors corresponding to each option
 * @param {string} height - the height style of the buttons container
 * @return {JSX.Element} the rendered action buttons component
 */
function ActionButtons({ preId, role, arialLabel, typeButton, options, colors, height }) {
  const { option, setOption, setColor, setTooRead } = useContext(MyContext);
  const [optionSelect, setOptionSelect] = useState("");

  useEffect(() => {
    const updateContext = () => {
      const isRead = option === "Read";
      setColor(isRead ? "success" : "danger");
      setOptionSelect(isRead);
      setTooRead(isRead);
    };
    updateContext();
  }, [option]);

  const handleBtnClick = (ev) => {
    setOption(ev.target.value);
  };
  const showRadioButtons = (parOptionsArray) => {
    if (!Array.isArray(parOptionsArray)) {
      throw new Error('The argument of the function "showRadioButtons" must be an array!!');
    }

    return parOptionsArray.map((opt, index) => (
      <div key={opt} className="mx-1">
        <button
          type={typeButton}
          className={`btn btn-sm btn-outline-${colors[index]} text-white-emphasis fw-bolder border border-2 border-${colors[index]}`}
          id={`${preId}_${index}`}
          value={opt}
          onClick={(ev) => handleBtnClick(ev)}
          style={{ border: "1px solid red", width: "auto" }}
        >
          {opt}
        </button>
      </div>
    ));
  };
  const radioButtons = showRadioButtons(options);

  return (
    <div
      className="d-flex flex-row justify-content-between align-items-center gap-2 p-0 shadow-sm"
      style={{ height, margin: "0.2rem 0rem" }}
      role={role}
      aria-label={arialLabel}>
      {radioButtons}
    </div>
  );
}

export default ActionButtons;

/*
    This code snippet defines a React functional component called "ActionButtons". It takes several props as input, 
    including: preId, role, arialLabel, typeButton, options, colors, and height.

    Inside the component, it uses the "useContext" hook to access a context called MyContext. It also uses the "useState" 
    hook to manage the option state variable and "useEffect" hooks.

    The "useEffect" hook is used to update the context and some local state variables whenever the option variable changes.

    There is a "handleBtnClick" function that updates the option state variable when a button is clicked.

    The "showRadioButtons" function takes an array of options as an argument and returns a list of buttons created using 
    the "showRadioButtons" function from the provided options.

    Finally, the component returns a div element that contains the radio buttons generated by the "showRadioButtons" function
*/